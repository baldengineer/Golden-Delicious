// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------- //
// TEST_CAP //
// -------- //

#define TEST_CAP_wrap_target 2
#define TEST_CAP_wrap 5

#define TEST_CAP_offset_start 0u

static const uint16_t TEST_CAP_program_instructions[] = {
    0x2093, //  0: wait   1 gpio, 19                 
    0x2013, //  1: wait   0 gpio, 19                 
            //     .wrap_target
    0x2041, //  2: wait   0 irq, 1                   
    0x208d, //  3: wait   1 gpio, 13                 
    0x210d, //  4: wait   0 gpio, 13             [1] 
    0x4004, //  5: in     pins, 4                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program TEST_CAP_program = {
    .instructions = TEST_CAP_program_instructions,
    .length = 6,
    .origin = 0,
};

static inline pio_sm_config TEST_CAP_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + TEST_CAP_wrap_target, offset + TEST_CAP_wrap);
    return c;
}
#endif

// --------- //
// TIM_MAGIC //
// --------- //

#define TIM_MAGIC_wrap_target 0
#define TIM_MAGIC_wrap 7

static const uint16_t TIM_MAGIC_program_instructions[] = {
            //     .wrap_target
    0xe037, //  0: set    x, 23                      
    0x2013, //  1: wait   0 gpio, 19                 
    0xc041, //  2: irq    clear 1                    
    0x2093, //  3: wait   1 gpio, 19                 
    0x200d, //  4: wait   0 gpio, 13                 
    0x208d, //  5: wait   1 gpio, 13                 
    0x0044, //  6: jmp    x--, 4                     
    0xc001, //  7: irq    nowait 1                   
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program TIM_MAGIC_program = {
    .instructions = TIM_MAGIC_program_instructions,
    .length = 8,
    .origin = -1,
};

static inline pio_sm_config TIM_MAGIC_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + TIM_MAGIC_wrap_target, offset + TIM_MAGIC_wrap);
    return c;
}
#endif

