.program KBD
.side_set 1 opt

; output pins (9 total)
; gpio 4-12 (d7-d0, en_245)

; input pins
.define KSEL0 3
.define KSEL1 18
.define KSEL2 19
.define RW 20
.define PH0 21
; 22: 
; 23: 
; 24:
; 25:

; used to store/repeat last key press
mov x, null             ; fallback char if TX FIFO is empty
mov y, null             ; will store last decoded characters

; make sure the data bus is set to output
mov osr, ~ null         ; load FFs into OSR (for change to output)
out pindirs, 8 side 1   ; shift 8 FFs into pin direction register from OSR
                        ; and disable data buffer

.wrap_target 
start:
    wait 0 gpio KSEL2 side 1 [6]  ; KSEL2 and de-assert 245
    wait 0 gpio KSEL1  [6] ; KSEL1 both seem to do the same thing
C0XX:
    pull noblock   [6]     ; Get Values 0xYX Y = anykey X = KeyRDY
    
    mov isr,null        ; Clear ISR
    in PINS, 1          ; get KSEL0 from the input pins (bottom bit)
    mov Y, ISR          ; move to x for comparison
    jmp !Y, C000        ; KSEL0 0 C000
C010:
    ;Clear bit 0        ;Clear Keystrobe
    out null,1 ;Delete KeyRDY 0xxx xxxx xxxx xxxx xxxx xxxx xxxx xxxY | X
    mov isr,::osr
    in null,1  ; xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxy0 
    mov osr,::isr
              ;Shift OSR into x 31 times re-aligning Anykey
    mov x,osr ;Backup osr
    out null,1
    out pins,1
    jmp wait_phase
C000:
    mov x,osr ;Backup osr
    out pins,1          ;output keystrobe Gets reset when C side sends new values
    
wait_phase:
    wait 1 gpio PH0     ; wait for Data Cycle

set_245en:
    jmp PIN,read        ;If RW is High Read Cycle
    jmp not_read

read:
    nop side 0          ;Enable databus via on-board '245
not_read:  
    wait 0 gpio PH0     ; wait for data phase to end
.wrap          
